---
name: Update ‚¨ÜÔ∏è

'on':
  schedule:
    - cron: '30 4 * * 1'  # At 04:30 on Monday.
  workflow_dispatch:

jobs:
  # Generate build hosts matrix
  build-matrix:
    uses: ./.github/workflows/helper_host_matrix.yaml

  # Generate deploy hosts matrix
  deploy-matrix:
    uses: ./.github/workflows/helper_host_matrix.yaml
    with:
      deployOnly: true

  cache-shell:
    uses: ./.github/workflows/helper_cache_shell.yaml
    needs: update

  check:
    uses: ./.github/workflows/helper_check_flake.yaml
    needs: cache
    with:
      branch: tmp-updater-branch

  update:
    name: Update dependencies
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: wimpysworld/nothing-but-nix@v6
      - uses: DeterminateSystems/nix-installer-action@v17
      - uses: cachix/cachix-action@v16
        with:
          name: etu
          extraPullNames: 'nix-community'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      # Update flake
      - name: Update flake inputs
        run: 'nix flake update'
        env:
          github_token: '${{ secrets.GITHUB_TOKEN }}'

      # Pre-fetch deps
      - name: Pre-fetch deps
        run: 'nix develop --command true'
        env:
          github_token: '${{ secrets.GITHUB_TOKEN }}'

      # Do updates of nixpkgs and other dependencies.
      - name: Update all dependencies
        run: 'nix develop --command make update-all'
        env:
          github_token: '${{ secrets.GITHUB_TOKEN }}'

      # Commit the updated dependencies to temporary branch
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'cron(treewide): Upgrade systems'
          branch: tmp-updater-branch
          create_branch: true
          push_options: '--force'

  cache:
    name: Cache ${{ matrix.hostname }} üìù
    runs-on: ubuntu-24.04
    needs: [update, build-matrix]
    strategy:
      matrix: ${{ fromJSON(needs.build-matrix.outputs.matrix) }}
    steps:
      # Clone the code from the temporary branch
      - uses: actions/checkout@v4
        with:
          ref: tmp-updater-branch
      - uses: wimpysworld/nothing-but-nix@v6
      - uses: DeterminateSystems/nix-installer-action@v17
      - uses: cachix/cachix-action@v16
        with:
          name: etu
          extraPullNames: 'nix-community'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      # Build systems.
      - name: Build system derivation
        run: 'nix build .#nixosConfigurations.${{ matrix.hostname }}.config.system.build.toplevel'

  promote:
    name: Promote to main branch
    runs-on: ubuntu-24.04
    needs: check
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Get remote branch data
        run: 'git fetch'

      - name: Get the tmp-updater-branch branch
        run: 'git checkout tmp-updater-branch'

      - name: Push temporary branch to main branch
        run: 'git push origin tmp-updater-branch:main'

      - name: Delete the temporary branch
        run: 'git push origin --delete tmp-updater-branch'

  deploy:
    name: Deploy ${{ matrix.hostname }} üöÄ
    runs-on: ubuntu-24.04
    needs: [promote, deploy-matrix]
    # Don't cancel jobs if one job fails
    continue-on-error: true
    strategy:
      matrix: ${{ fromJSON(needs.build-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
      - run: |
          git pull
      - uses: wimpysworld/nothing-but-nix@v6
      - uses: DeterminateSystems/nix-installer-action@v17
      - uses: cachix/cachix-action@v16
        with:
          name: etu
          extraPullNames: 'nix-community'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      # Build systems.
      - name: Build system derivation
        run: 'nix build .#nixosConfigurations.${{ matrix.hostname }}.config.system.build.toplevel'

      # Configure SSH key
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_ed25519
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      # Connect to tailscale
      - uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      # Deploy systems
      - name: Deploy system
        run: 'nix develop -c deploy --skip-checks --targets .#${{ matrix.hostname }}'
