---
name: Deploy üöÄ

'on':
  push:
    branches:
      - main
    paths:
      - '**.nix'
      - '**.age'
      - 'flake.lock'

concurrency:
  group: ci-${{ github.ref }}-deploy
  cancel-in-progress: true

jobs:
  matrix:
    uses: ./.github/workflows/helper_host_matrix.yaml
    with:
      deployOnly: true

  check:
    name: Check ‚úîÔ∏è
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: wimpysworld/nothing-but-nix@v6
      - uses: DeterminateSystems/nix-installer-action@v17
      - uses: cachix/cachix-action@v16
        with:
          name: etu
          extraPullNames: 'nix-community'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Check the flake
        run: 'nix flake check'

  deploy:
    name: Deploy ${{ matrix.hostname }} üöÄ
    runs-on: ubuntu-24.04
    needs: [check, matrix]
    # Don't cancel jobs if one job fails
    continue-on-error: true
    strategy:
      matrix: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: wimpysworld/nothing-but-nix@v6
      - uses: DeterminateSystems/nix-installer-action@v17
      - uses: cachix/cachix-action@v16
        with:
          name: etu
          extraPullNames: 'nix-community'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build ${{ matrix.hostname }} üî®
        run: 'nix build .#nixosConfigurations.${{ matrix.hostname }}.config.system.build.toplevel'

      # Configure SSH key
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_ed25519
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      # Connect to tailscale
      - uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Deploy ${{ matrix.hostname }} üöÄ
        run: nix develop -c deploy --skip-checks --targets .#${{ matrix.hostname }}
